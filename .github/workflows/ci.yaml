name: "CI"
on:
  pull_request:
  push:
    branches:
      - main

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  CLICOLOR: 1
  CLICOLOR_FORCE: 1

jobs:
  build:
    name: "Build and test"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Test
        uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/reubeno/brush/devcontainer
          push: never
          runCmd: |
            set -euo pipefail
            cargo build
            cargo test -- --show-output

  check:
    name: "Source code checks"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Test
        uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/reubeno/brush/devcontainer
          push: never
          runCmd: |
            set -euo pipefail
            cargo fmt --check --all
            cargo check --all-targets
            cargo deny check
            cargo clippy --all-targets

      - name: Performance analysis
        uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/reubeno/brush/devcontainer
          push: never
          runCmd: |
            set -euo pipefail
            cargo bench --workspace
