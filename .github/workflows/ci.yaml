name: "CI"
on:
  pull_request:
  push:
    branches:
      - main

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  CLICOLOR: 1
  CLICOLOR_FORCE: 1

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build
        run: cargo build --release

  test:
    name: "Test"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: llvm-tools-preview

      - name: Test
        run: cargo test -- --show-output

  check:
    name: "Source code checks"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@v1.6.4

      - name: Format check
        run: cargo fmt --check --all

      - name: Check
        run: cargo check --all-targets

      - name: Deny check
        run: |
          set -euo pipefail
          cargo binstall --no-confirm cargo-deny
          cargo deny check

      - name: Clippy check
        run: cargo clippy --all-targets

  benchmark:
    if: github.event_name == 'pull_request'
    name: "Benchmarks"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
            path: pr

      - name: Checkout
        uses: actions/checkout@v4
        with:
            path: main
            ref: main

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Performance analysis on PR
        run: |
            set -euo pipefail
            cd pr
            cargo bench --workspace -- --output-format bencher | tee benchmarks.txt

      - name: Performance analysis on main
        run: |
            set -euo pipefail
            cd main
            cargo bench --workspace -- --output-format bencher | tee benchmarks.txt

      - name: Compare benchmark results
        uses: openpgpjs/github-action-pull-request-benchmark@v1
        with:
          name: 'Time benchmark'
          tool: 'cargo'
          pr-benchmark-file-path: pr/benchmarks.txt
          base-benchmark-file-path: main/benchmarks.txt
          comment-on-alert: true
          alert-threshold: '130%'
          fail-on-alert: false
          fail-threshold: '150%'
          # A token is needed to leave commit comments
          github-token: ${{ secrets.GITHUB_TOKEN }}
